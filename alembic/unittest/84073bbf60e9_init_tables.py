"""init tables

Revision ID: 84073bbf60e9
Revises: 
Create Date: 2021-09-20 23:57:36.851740

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '84073bbf60e9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('short_name', sa.String(length=10), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_countries_name'), 'countries', ['name'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=512), nullable=True),
    sa.Column('last_name', sa.String(length=512), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('airlines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'country_id', name='airline_name_country_unique')
    )
    op.create_index(op.f('ix_airlines_country_id'), 'airlines', ['country_id'], unique=False)
    op.create_table('cities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'country_id', name='city_name_country_unique')
    )
    op.create_index(op.f('ix_cities_country_id'), 'cities', ['country_id'], unique=False)
    op.create_table('user_flight_stats',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('flight_distance', sa.Integer(), nullable=True),
    sa.Column('flight_time', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_flight_stats_user_id'), 'user_flight_stats', ['user_id'], unique=True)
    op.create_table('airports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('short_name', sa.String(length=10), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'city_id', name='airport_name_city_unique')
    )
    op.create_index(op.f('ix_airports_city_id'), 'airports', ['city_id'], unique=False)
    op.create_table('meetups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address', sa.String(length=512), nullable=True),
    sa.Column('event_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('city_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meetups_city_id'), 'meetups', ['city_id'], unique=False)
    op.create_table('boarding_passes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('meetup_id', sa.Integer(), nullable=True),
    sa.Column('invitation_code', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('used', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['meetup_id'], ['meetups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'meetup_id', name='user_meetup_unique')
    )
    op.create_index(op.f('ix_boarding_passes_invitation_code'), 'boarding_passes', ['invitation_code'], unique=True)
    op.create_index(op.f('ix_boarding_passes_meetup_id'), 'boarding_passes', ['meetup_id'], unique=False)
    op.create_index(op.f('ix_boarding_passes_user_id'), 'boarding_passes', ['user_id'], unique=False)
    op.create_table('flights',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('departure_airport_id', sa.Integer(), nullable=True),
    sa.Column('arrival_airport_id', sa.Integer(), nullable=True),
    sa.Column('airline_id', sa.Integer(), nullable=True),
    sa.Column('flight_distance', sa.Integer(), nullable=True),
    sa.Column('flight_time', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['airline_id'], ['airlines.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['arrival_airport_id'], ['airports.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['departure_airport_id'], ['airports.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_flights_airline_id'), 'flights', ['airline_id'], unique=False)
    op.create_index(op.f('ix_flights_arrival_airport_id'), 'flights', ['arrival_airport_id'], unique=False)
    op.create_index(op.f('ix_flights_departure_airport_id'), 'flights', ['departure_airport_id'], unique=False)
    op.create_table('users_flights',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('flight_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['flight_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['flights.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_flights_flight_id'), 'users_flights', ['flight_id'], unique=False)
    op.create_index(op.f('ix_users_flights_user_id'), 'users_flights', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_flights_user_id'), table_name='users_flights')
    op.drop_index(op.f('ix_users_flights_flight_id'), table_name='users_flights')
    op.drop_table('users_flights')
    op.drop_index(op.f('ix_flights_departure_airport_id'), table_name='flights')
    op.drop_index(op.f('ix_flights_arrival_airport_id'), table_name='flights')
    op.drop_index(op.f('ix_flights_airline_id'), table_name='flights')
    op.drop_table('flights')
    op.drop_index(op.f('ix_boarding_passes_user_id'), table_name='boarding_passes')
    op.drop_index(op.f('ix_boarding_passes_meetup_id'), table_name='boarding_passes')
    op.drop_index(op.f('ix_boarding_passes_invitation_code'), table_name='boarding_passes')
    op.drop_table('boarding_passes')
    op.drop_index(op.f('ix_meetups_city_id'), table_name='meetups')
    op.drop_table('meetups')
    op.drop_index(op.f('ix_airports_city_id'), table_name='airports')
    op.drop_table('airports')
    op.drop_index(op.f('ix_user_flight_stats_user_id'), table_name='user_flight_stats')
    op.drop_table('user_flight_stats')
    op.drop_index(op.f('ix_cities_country_id'), table_name='cities')
    op.drop_table('cities')
    op.drop_index(op.f('ix_airlines_country_id'), table_name='airlines')
    op.drop_table('airlines')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_countries_name'), table_name='countries')
    op.drop_table('countries')
    # ### end Alembic commands ###
